name: Continuous integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        rust:
          - 1.75.0
          - stable
          - beta
          - nightly
        include:
          - rust: nightly
            coverage: 'send'
            components: llvm-tools

    steps:
    - uses: actions/checkout@v4

    - name: Install ${{ matrix.rust }} toolchain
      run: rustup toolchain install ${{ matrix.rust }} --profile minimal --target=thumbv7em-none-eabihf --no-self-update

    - name: Install ${{ matrix.components }} components
      if: ${{ matrix.components }}
      run: rustup component add ${{ matrix.components }}

    - uses: Swatinem/rust-cache@v2

    - name: Install grcov
      if: matrix.coverage == 'send'
      run: cargo install grcov

    - name: Tests
      env:
        RUSTFLAGS: '-D warnings'
      run: |
        cargo build --verbose
        cargo test --verbose
        cargo build --verbose --no-default-features
        cargo test --verbose --no-default-features
        cargo build --verbose --no-default-features --features=alloc
        cargo test --verbose --no-default-features --features=alloc
        cargo build -p ser-write-json --verbose --features=de-any-f32
        cargo test -p ser-write-json --verbose --features=de-any-f32
        cargo build -p ser-write-json --verbose --no-default-features --features=de-any-f32
        cargo test -p ser-write-json --verbose --no-default-features --features=de-any-f32
        cargo build -p ser-write-json --verbose --no-default-features --features alloc,de-any-f32
        cargo test -p ser-write-json --verbose --no-default-features --features alloc,de-any-f32
        cargo build -p ser-write --verbose --features=arrayvec,heapless
        cargo test -p ser-write --verbose --features=arrayvec,heapless
        cargo test -r --verbose
        cargo test -r --verbose --no-default-features
        cargo test -r --verbose --no-default-features --features=alloc
        cargo test -r -p ser-write-json --verbose --features=de-any-f32
        cargo test -r -p ser-write-json --verbose --no-default-features --features=de-any-f32
        cargo test -r -p ser-write-json --verbose --no-default-features --features=alloc,de-any-f32
        cargo build -p ser-write-json-embedded-example --target thumbv7em-none-eabihf --verbose
        cargo build -p ser-write-msgpack-embedded-example --target thumbv7em-none-eabihf --verbose

    - name: Coverage
      if: matrix.coverage == 'send'
      env:
        LLVM_PROFILE_FILE: "ser-write-%p-%m.profraw"
        RUSTFLAGS: "-Cinstrument-coverage"
      run: |
        cargo build --verbose
        cargo test --verbose
        cargo build --verbose --all-features
        cargo test --verbose --all-features
        cargo build --verbose --no-default-features --features=alloc
        cargo test --verbose --no-default-features --features=alloc
        grcov . \
            --binary-path ./target/debug/ \
            --branch \
            --output-type lcov \
            --source-dir . \
            --output-path ./lcov.info \
            --ignore-not-existing \
            --keep-only 'src/*' \
            --keep-only 'ser-write-json/src/*' \
            --keep-only 'ser-write-msgpack/src/*' \
            --commit-sha ${{ github.sha }} \
            --service-job-id ${{ github.job }} \
            --service-name "GitHub Actions" \
            --service-number ${{ github.run_id }}

    - name: Upload coverage as artifact
      if: matrix.coverage == 'send'
      uses: actions/upload-artifact@v4
      with:
        name: lcov.info
        path: ./lcov.info
        if-no-files-found: error

    - name: Upload coverage to Coveralls
      if: matrix.coverage == 'send'
      uses: coverallsapp/github-action@v2
      with:
        file: lcov.info
        format: lcov
